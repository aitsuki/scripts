import json

CFG_JSON_FILE = "env/dev.json"
CFG_DART_CLASS_NAME = "BuildConfig"
CFG_DART_FILE_NAME = "res/build_config.g.dart"


def darttype(value) -> str:
    if isinstance(value, str):
        return "String"
    elif isinstance(value, bool):
        return "bool"
    elif isinstance(value, int):
        return "int"
    elif isinstance(value, float):
        return "double"
    else:
        print(f"Key: {key}, Value: {value}, Type: Unknown")
        raise


def const_to_camel_case(snake: str):
    components = snake.lower().split("_")
    return components[0] + "".join(x.title() for x in components[1:])


with open(CFG_JSON_FILE) as file:
    data = json.load(file)

with open("lib/" + CFG_DART_FILE_NAME, "w") as file:
    file.write("// This file is generated by python and should not be modified\n\n")
    file.write("class " + CFG_DART_CLASS_NAME + " {\n")
    for key, value in data.items():
        t = darttype(value)
        print(f"{key} :: {value} :: {t}")
        name = const_to_camel_case(key)
        file.write(f'  static const {t} {name} = {t}.fromEnvironment("{key}");\n')
    file.write("}\n")
